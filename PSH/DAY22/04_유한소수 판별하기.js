function solution(a, b) {
    // 1. 공약수 구하기
    const cd = [1];
    for(let i = 2; i <= b; i++){
        if(a%i===0 && b%i===0){
            cd.push(i);
        }
    }
    // console.log(cd)
    // > [1, 11]
    
    // 2. 최대공약수 구하기
    const gcd = Math.max(...cd);
    let newB = b/gcd;
    // console.log(newB)
    // > 2
        
    // 3. 새로운 분모 소인수분해 하기
    const newCd = []
    for(let i = 2; i <= newB; i++){
        if(newB%i===0){
            while(newB%i===0){
                newB = newB/i
            }
            newCd.push(i, newB);
        }
    }
    // console.log(newCd)
    // > [2, 1]
    
    if(newCd.join('').replaceAll('1','').replaceAll('2','').replaceAll('5','')){
        return 2
    }else{
        return 1
    }
}

// 테스트 1 〉	통과 (0.17ms, 33.5MB)
// 테스트 2 〉	통과 (0.18ms, 32.9MB)
// 테스트 3 〉	통과 (0.22ms, 33.4MB)
// 테스트 4 〉	통과 (0.16ms, 33.4MB)
// 테스트 5 〉	통과 (0.15ms, 33.4MB)
// 테스트 6 〉	통과 (0.17ms, 33.4MB)
// 테스트 7 〉	통과 (0.15ms, 33.4MB)
// 테스트 8 〉	통과 (0.15ms, 33.4MB)
// 테스트 9 〉	통과 (0.15ms, 33.4MB)
// 테스트 10 〉	통과 (0.20ms, 33.5MB)
// 테스트 11 〉	통과 (0.07ms, 33.4MB)
// 테스트 12 〉	통과 (0.17ms, 33.4MB)
// 테스트 13 〉	통과 (0.11ms, 33.4MB)
// 테스트 14 〉	통과 (0.10ms, 33.5MB)
// 테스트 15 〉	통과 (0.07ms, 33.4MB)
// 테스트 16 〉	통과 (0.15ms, 33.4MB)
// 테스트 17 〉	통과 (0.11ms, 33.5MB)
// 테스트 18 〉	통과 (0.07ms, 33.4MB)
// 테스트 19 〉	통과 (0.15ms, 33.5MB)
// 테스트 20 〉	통과 (0.07ms, 33.4MB)
// 테스트 21 〉	통과 (0.12ms, 33.4MB)
// 테스트 22 〉	통과 (0.16ms, 33.4MB)
// 테스트 23 〉	통과 (0.16ms, 33.4MB)
// 테스트 24 〉	통과 (0.07ms, 33.4MB)
// 테스트 25 〉	통과 (0.17ms, 33.4MB)
// 테스트 26 〉	통과 (0.07ms, 33.4MB)
// 테스트 27 〉	통과 (0.15ms, 33.4MB)
// 테스트 28 〉	통과 (0.16ms, 33.5MB)
// 테스트 29 〉	통과 (0.17ms, 33.4MB)
// 테스트 30 〉	통과 (0.07ms, 33.5MB)
// 테스트 31 〉	통과 (0.17ms, 33.4MB)
// 테스트 32 〉	통과 (0.17ms, 33.4MB)
// 테스트 33 〉	통과 (0.16ms, 33.6MB)
// 테스트 34 〉	통과 (0.07ms, 33.4MB)
// 테스트 35 〉	통과 (0.16ms, 33.5MB)
// 테스트 36 〉	통과 (0.16ms, 33.5MB)
// 테스트 37 〉	통과 (0.16ms, 33.5MB)
// 테스트 38 〉	통과 (0.16ms, 33.5MB)
// 테스트 39 〉	통과 (0.15ms, 33.4MB)
// 테스트 40 〉	통과 (0.18ms, 33.4MB)
// 테스트 41 〉	통과 (0.24ms, 33.4MB)
// 테스트 42 〉	통과 (0.18ms, 33.4MB)
// 테스트 43 〉	통과 (0.15ms, 33.5MB)
// 테스트 44 〉	통과 (0.18ms, 33.4MB)
// 테스트 45 〉	통과 (0.17ms, 33.4MB)
// 테스트 46 〉	통과 (0.20ms, 33.4MB)
// 테스트 47 〉	통과 (0.15ms, 33.4MB)
// 테스트 48 〉	통과 (0.28ms, 33.4MB)